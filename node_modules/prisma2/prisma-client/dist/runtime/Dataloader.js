"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Dataloader {
    constructor(loader) {
        this.loader = loader;
    }
    request(request) {
        if (!this.currentBatch) {
            this.currentBatch = [];
            process.nextTick(() => {
                this.dispatchBatch();
            });
        }
        return new Promise((resolve, reject) => {
            this.currentBatch.push({
                request,
                resolve,
                reject,
            });
        });
    }
    dispatchBatch() {
        if (!this.currentBatch) {
            throw new Error(`Can't dispatch without existing batch`);
        }
        const batch = this.currentBatch;
        this.currentBatch = undefined;
        this.loader(batch.map(j => j.request))
            .then(results => {
            for (let i = 0; i < batch.length; i++) {
                const value = results[i];
                if (value instanceof Error) {
                    batch[i].reject(value);
                }
                else {
                    batch[i].resolve(value);
                }
            }
        })
            .catch(e => {
            for (let i = 0; i < batch.length; i++) {
                batch[i].reject(e);
            }
        });
    }
}
exports.Dataloader = Dataloader;
//# sourceMappingURL=Dataloader.js.map